void place(int tab[TAILLE][TAILLE], Tetromino* tetro, int blocktype, int score) {// place a block in the grid
	char c;
	int r;
	int veriflenght;
	do{
		printf("\nChoose a roation beetween 1 to 4 : \n");
		r=(int)input();
	}while(r>49 || r<53);	
	r=r-49;
	printf("\n You chose the nuber %d :\n\n\n", r+1);
	for(int m = 0; m < DIMENSION; m++) {
		for(int n = 0; n < DIMENSION; n++) {
			if(n == 0) {
				printf("\n%c", block(tetro->type[r][m][n]));
			}
			else {
				printf("%c", block(tetro->type[r][m][n]));
			}
		}
		printf(" ");
	}
	
	do {
		printf("\non which column you want to place your tetromino ? \n");
		c = input();
	} while (c < 65 || c > 74);
	
	int spacecount = 0;
	int minspace = 0;
	for(int i=0;i<(TAILLE-(74-c));i++){ // lenght of moovment from the left to the "c" column
		for(int j=0;i<4;j++){	// detect from line 0 to 3 for blocks such as the 'I'




int gap_x(Tetromino *tetro){
	int gap = 0;
	switch(tetro.form):
		case 0:
			return 1;
		case 1:
			if(tetro.rotation == 1 || tetro.rotation == 3){
				return 0;
			}
			else{
				return 3;
			}
		case 2;
			if(tetro.rotation
					
		
	


int placement_x(Tetromino *tetro, int rotation, int column){
	int calc[TAILLE][TAILLE];
	int count=0;
	int min_right=0;
	for(int i=0; i<4;i++){
		for(int j=3;j<0;j--){
			if(tetro.type[rotation][i][j]!=0){// stocke le plus proche a droite
				if(count<min){
					min = count; // compte le plus proche a doite.
				}  		
			}	
			else if(tetro.type[rotation][i][j] == 0){
				count++;
			}
			count = 0;
	}
	for(int k=0; k<column;k++){
		for(int l=0; l<4;l++){ // Ã§a place le bloc au bon endroit sur les x
			for(int m=0;m<4;m++){
				if(min_right
				calc[(columnmin_right][l] = tetro.type[k][l];
	
	
		
	





